import { AnimType as AnimType0 } from './elements/properties/anim_type';
import { AnimationResetName as AnimationResetName0 } from './elements/properties/animation_reset_name';
import { DestroyAtEnd as DestroyAtEnd0 } from './elements/properties/destroy_at_end';
import { DisableAnimFastForward as DisableAnimFastForward0 } from './elements/properties/disable_anim_fast_forward';
import { Duration as Duration0 } from './elements/properties/duration';
import { Easing as Easing0 } from './elements/properties/easing';
import { EndEvent as EndEvent0 } from './elements/properties/end_event';
import { Fps as Fps0 } from './elements/properties/fps';
import { FrameCount as FrameCount0 } from './elements/properties/frame_count';
import { FrameStep as FrameStep0 } from './elements/properties/frame_step';
import { From as From0 } from './elements/properties/from';
import { InitialUv as InitialUv0 } from './elements/properties/initial_uv';
import { Next as Next0 } from './elements/properties/next';
import { PlayEvent as PlayEvent0 } from './elements/properties/play_event';
import { PropagateAlpha as PropagateAlpha0 } from './elements/properties/propagate_alpha';
import { Reversible as Reversible0 } from './elements/properties/reversible';
import { ScaleFromStartingAlpha as ScaleFromStartingAlpha0 } from './elements/properties/scale_from_starting_alpha';
import { To as To0 } from './elements/properties/to';
import { Uv as Uv0 } from './elements/properties/uv';
import { UvSize as UvSize0 } from './elements/properties/uv_size';
import { ItemRef as ItemRef0 } from './general/item_ref';
import { Bindings as Bindings0 } from './elements/properties/bindings';
import { AllowClipping as AllowClipping0 } from './elements/properties/allow_clipping';
import { AllowDebugMissingTexture as AllowDebugMissingTexture0 } from './elements/properties/allow_debug_missing_texture';
import { AllowScrollEvenWhenContentFits as AllowScrollEvenWhenContentFits0 } from './elements/properties/allow_scroll_even_when_content_fits';
import { Alpha as Alpha0 } from './elements/properties/alpha';
import { AlwaysHandlePointer as AlwaysHandlePointer0 } from './elements/properties/always_handle_pointer';
import { AlwaysHandleScrolling as AlwaysHandleScrolling0 } from './elements/properties/always_handle_scrolling';
import { AlwaysListenToInput as AlwaysListenToInput0 } from './elements/properties/always_listen_to_input';
import { AlwaysRotate as AlwaysRotate0 } from './elements/properties/always_rotate';
import { AnchorFrom as AnchorFrom0 } from './elements/properties/anchor_from';
import { AnchorTo as AnchorTo0 } from './elements/properties/anchor_to';
import { Anims as Anims0 } from './elements/properties/anims';
import { BackgroundControl as BackgroundControl0 } from './elements/properties/background_control';
import { BackgroundHoverControl as BackgroundHoverControl0 } from './elements/properties/background_hover_control';
import { BackupFontType as BackupFontType0 } from './elements/properties/backup_font_type';
import { Bilinear as Bilinear0 } from './elements/properties/bilinear';
import { ButtonMappings as ButtonMappings0 } from './elements/properties/button_mappings';
import { CacheScreen as CacheScreen0 } from './elements/properties/cache_screen';
import { CheckedControl as CheckedControl0 } from './elements/properties/checked_control';
import { CheckedHoverControl as CheckedHoverControl0 } from './elements/properties/checked_hover_control';
import { CheckedLockedControl as CheckedLockedControl0 } from './elements/properties/checked_locked_control';
import { CheckedLockedHoverControl as CheckedLockedHoverControl0 } from './elements/properties/checked_locked_hover_control';
import { ClipDirection as ClipDirection0 } from './elements/properties/clip_direction';
import { ClipPixelperfect as ClipPixelperfect0 } from './elements/properties/clip_pixelperfect';
import { ClipsChildren as ClipsChildren0 } from './elements/properties/clips_children';
import { CloseOnPlayerHurt as CloseOnPlayerHurt0 } from './elements/properties/close_on_player_hurt';
import { CollectionIndex as CollectionIndex0 } from './elements/properties/collection_index';
import { CollectionName as CollectionName0 } from './elements/properties/collection_name';
import { Color as Color0 } from './elements/properties/color';
import { ConsumeHoverEvents as ConsumeHoverEvents0 } from './elements/properties/consume_hover_events';
import { Contained as Contained0 } from './elements/properties/contained';
import { ControlName as ControlName0 } from './elements/properties/control_name';
import { DefaultControl as DefaultControl0 } from './elements/properties/default_control';
import { DefaultFocusPrecedence as DefaultFocusPrecedence0 } from './elements/properties/default_focus_precedence';
import { Draggable as Draggable0 } from './elements/properties/draggable';
import { DropdownArea as DropdownArea0 } from './elements/properties/dropdown_area';
import { DropdownContentControl as DropdownContentControl0 } from './elements/properties/dropdown_content_control';
import { DropdownName as DropdownName0 } from './elements/properties/dropdown_name';
import { EnableDirectionalToggling as EnableDirectionalToggling0 } from './elements/properties/enable_directional_toggling';
import { EnableProfanityFilter as EnableProfanityFilter0 } from './elements/properties/enable_profanity_filter';
import { EnabledNewline as EnabledNewline0 } from './elements/properties/enabled_newline';
import { Enabled as Enabled0 } from './elements/properties/enabled';
import { Factory as Factory0 } from './elements/properties/factory';
import { Fill as Fill0 } from './elements/properties/fill';
import { FocusChangeDown as FocusChangeDown0 } from './elements/properties/focus_change_down';
import { FocusChangeLeft as FocusChangeLeft0 } from './elements/properties/focus_change_left';
import { FocusChangeRight as FocusChangeRight0 } from './elements/properties/focus_change_right';
import { FocusChangeUp as FocusChangeUp0 } from './elements/properties/focus_change_up';
import { FocusContainer as FocusContainer0 } from './elements/properties/focus_container';
import { FocusEnabled as FocusEnabled0 } from './elements/properties/focus_enabled';
import { FocusIdentifier as FocusIdentifier0 } from './elements/properties/focus_identifier';
import { FocusMagnetEnabled as FocusMagnetEnabled0 } from './elements/properties/focus_magnet_enabled';
import { FocusNavigationModeDown as FocusNavigationModeDown0 } from './elements/properties/focus_navigation_mode_down';
import { FocusNavigationModeLeft as FocusNavigationModeLeft0 } from './elements/properties/focus_navigation_mode_left';
import { FocusNavigationModeRight as FocusNavigationModeRight0 } from './elements/properties/focus_navigation_mode_right';
import { FocusNavigationModeUp as FocusNavigationModeUp0 } from './elements/properties/focus_navigation_mode_up';
import { FocusWrapEnabled as FocusWrapEnabled0 } from './elements/properties/focus_wrap_enabled';
import { FontScaleFactor as FontScaleFactor0 } from './elements/properties/font_scale_factor';
import { FontSize as FontSize0 } from './elements/properties/font_size';
import { FontType as FontType0 } from './elements/properties/font_type';
import { ForceRenderBelow as ForceRenderBelow0 } from './elements/properties/force_render_below';
import { ForceTextureReload as ForceTextureReload0 } from './elements/properties/force_texture_reload';
import { GridDimensionBinding as GridDimensionBinding0 } from './elements/properties/grid_dimension_binding';
import { GridDimensions as GridDimensions0 } from './elements/properties/grid_dimensions';
import { GridItemTemplate as GridItemTemplate0 } from './elements/properties/grid_item_template';
import { GridPosition as GridPosition0 } from './elements/properties/grid_position';
import { GridRescalingType as GridRescalingType0 } from './elements/properties/grid_rescaling_type';
import { HandleDeselect as HandleDeselect0 } from './elements/properties/handle_deselect';
import { HandleSelect as HandleSelect0 } from './elements/properties/handle_select';
import { HideHyphen as HideHyphen0 } from './elements/properties/hide_hyphen';
import { HoverControl as HoverControl0 } from './elements/properties/hover_control';
import { HoverEnabled as HoverEnabled0 } from './elements/properties/hover_enabled';
import { Ignored as Ignored0 } from './elements/properties/ignored';
import { Images as Images0 } from './elements/properties/images';
import { IndentControl as IndentControl0 } from './elements/properties/indent_control';
import { InheritMaxSiblingHeight as InheritMaxSiblingHeight0 } from './elements/properties/inherit_max_sibling_height';
import { InheritMaxSiblingWidth as InheritMaxSiblingWidth0 } from './elements/properties/inherit_max_sibling_width';
import { IsModal as IsModal0 } from './elements/properties/is_modal';
import { IsShowingMenu as IsShowingMenu0 } from './elements/properties/is_showing_menu';
import { JumpToBottomOnUpdate as JumpToBottomOnUpdate0 } from './elements/properties/jump_to_bottom_on_update';
import { KeepRatio as KeepRatio0 } from './elements/properties/keep_ratio';
import { Layer as Layer0 } from './elements/properties/layer';
import { Localize as Localize0 } from './elements/properties/localize';
import { LockedControl as LockedControl0 } from './elements/properties/locked_control';
import { LowFrequencyRendering as LowFrequencyRendering0 } from './elements/properties/low_frequency_rendering';
import { MaxLength as MaxLength0 } from './elements/properties/max_length';
import { MaxSize as MaxSize0 } from './elements/properties/max_size';
import { MaximumGridItems as MaximumGridItems0 } from './elements/properties/maximum_grid_items';
import { MinSize as MinSize0 } from './elements/properties/min_size';
import { Modal as Modal0 } from './elements/properties/modal';
import { Offset as Offset0 } from './elements/properties/offset';
import { Orientation as Orientation0 } from './elements/properties/orientation';
import { PlaceHolderControl as PlaceHolderControl0 } from './elements/properties/place_holder_control';
import { PressedControl as PressedControl0 } from './elements/properties/pressed_control';
import { PreventTouchInput as PreventTouchInput0 } from './elements/properties/prevent_touch_input';
import { ProgressControl as ProgressControl0 } from './elements/properties/progress_control';
import { ProgressHoverControl as ProgressHoverControl0 } from './elements/properties/progress_hover_control';
import { PropertyBag as PropertyBag0 } from './elements/properties/property_bag';
import { RadioToggleGroup as RadioToggleGroup0 } from './elements/properties/radio_toggle_group';
import { RenderGameBehind as RenderGameBehind0 } from './elements/properties/render_game_behind';
import { RenderOnlyWhenTopmost as RenderOnlyWhenTopmost0 } from './elements/properties/render_only_when_topmost';
import { Renderer as Renderer0 } from './elements/properties/renderer';
import { ResetEvent as ResetEvent0 } from './elements/properties/reset_event';
import { ResetOnFocusLost as ResetOnFocusLost0 } from './elements/properties/reset_on_focus_lost';
import { RotateSpeed as RotateSpeed0 } from './elements/properties/rotate_speed';
import { ScreenDrawsLast as ScreenDrawsLast0 } from './elements/properties/screen_draws_last';
import { ScreenNotFlushable as ScreenNotFlushable0 } from './elements/properties/screen_not_flushable';
import { ScrollBoxAndTrackPanel as ScrollBoxAndTrackPanel0 } from './elements/properties/scroll_box_and_track_panel';
import { ScrollContent as ScrollContent0 } from './elements/properties/scroll_content';
import { ScrollSpeed as ScrollSpeed0 } from './elements/properties/scroll_speed';
import { ScrollViewPort as ScrollViewPort0 } from './elements/properties/scroll_view_port';
import { ScrollbarBox as ScrollbarBox0 } from './elements/properties/scrollbar_box';
import { ScrollbarTouchButton as ScrollbarTouchButton0 } from './elements/properties/scrollbar_touch_button';
import { ScrollbarTrackButton as ScrollbarTrackButton0 } from './elements/properties/scrollbar_track_button';
import { ScrollbarTrack as ScrollbarTrack0 } from './elements/properties/scrollbar_track';
import { SendTelemetry as SendTelemetry0 } from './elements/properties/send_telemetry';
import { Shadow as Shadow0 } from './elements/properties/shadow';
import { ShouldStealMouse as ShouldStealMouse0 } from './elements/properties/should_steal_mouse';
import { Size as Size0 } from './elements/properties/size';
import { SliderBoxControl as SliderBoxControl0 } from './elements/properties/slider_box_control';
import { SliderCollectionName as SliderCollectionName0 } from './elements/properties/slider_collection_name';
import { SliderDeselectedButton as SliderDeselectedButton0 } from './elements/properties/slider_deselected_button';
import { SliderDirection as SliderDirection0 } from './elements/properties/slider_direction';
import { SliderName as SliderName0 } from './elements/properties/slider_name';
import { SliderSelectOnHover as SliderSelectOnHover0 } from './elements/properties/slider_select_on_hover';
import { SliderSelectedButton as SliderSelectedButton0 } from './elements/properties/slider_selected_button';
import { SliderSmallDecreaseButton as SliderSmallDecreaseButton0 } from './elements/properties/slider_small_decrease_button';
import { SliderSmallIncreaseButton as SliderSmallIncreaseButton0 } from './elements/properties/slider_small_increase_button';
import { SliderSteps as SliderSteps0 } from './elements/properties/slider_steps';
import { SliderTrackButton as SliderTrackButton0 } from './elements/properties/slider_track_button';
import { SoundName as SoundName0 } from './elements/properties/sound_name';
import { SoundPitch as SoundPitch0 } from './elements/properties/sound_pitch';
import { SoundVolume as SoundVolume0 } from './elements/properties/sound_volume';
import { TextAlignment as TextAlignment0 } from './elements/properties/text_alignment';
import { TextBoxName as TextBoxName0 } from './elements/properties/text_box_name';
import { TextControl as TextControl0 } from './elements/properties/text_control';
import { TextEditBoxGridCollectionName as TextEditBoxGridCollectionName0 } from './elements/properties/text_edit_box_grid_collection_name';
import { TextLabels as TextLabels0 } from './elements/properties/text_labels';
import { TextType as TextType0 } from './elements/properties/text_type';
import { Text as Text0 } from './elements/properties/text';
import { TextureFileSystem as TextureFileSystem0 } from './elements/properties/texture_file_system';
import { Texture as Texture0 } from './elements/properties/texture';
import { Tiled as Tiled0 } from './elements/properties/tiled';
import { ToggleDefaultState as ToggleDefaultState0 } from './elements/properties/toggle_default_state';
import { ToggleGridCollectionName as ToggleGridCollectionName0 } from './elements/properties/toggle_grid_collection_name';
import { ToggleGroupDefaultSelected as ToggleGroupDefaultSelected0 } from './elements/properties/toggle_group_default_selected';
import { ToggleGroupForcedIndex as ToggleGroupForcedIndex0 } from './elements/properties/toggle_group_forced_index';
import { ToggleName as ToggleName0 } from './elements/properties/toggle_name';
import { ToggleOffButton as ToggleOffButton0 } from './elements/properties/toggle_off_button';
import { ToggleOnButton as ToggleOnButton0 } from './elements/properties/toggle_on_button';
import { TouchMode as TouchMode0 } from './elements/properties/touch_mode';
import { ControlHeader as ControlHeader0 } from './elements/properties/tts/control_header';
import { ControlTypeOrderPriority as ControlTypeOrderPriority0 } from './elements/properties/tts/control_type_order_priority';
import { IgnoreCount as IgnoreCount0 } from './elements/properties/tts/ignore_count';
import { IgnoreSubsections as IgnoreSubsections0 } from './elements/properties/tts/ignore_subsections';
import { IndexPriority as IndexPriority0 } from './elements/properties/tts/index_priority';
import { InheritSiblings as InheritSiblings0 } from './elements/properties/tts/inherit_siblings';
import { Name as Name0 } from './elements/properties/tts/name';
import { OverrideControlValue as OverrideControlValue0 } from './elements/properties/tts/override_control_value';
import { SectionHeader as SectionHeader0 } from './elements/properties/tts/section_header';
import { ToggleOff as ToggleOff0 } from './elements/properties/tts/toggle_off';
import { ToggleOn as ToggleOn0 } from './elements/properties/tts/toggle_on';
import { ValueChanged as ValueChanged0 } from './elements/properties/tts/value_changed';
import { ValueOrderPriority as ValueOrderPriority0 } from './elements/properties/tts/value_order_priority';
import { TtsSectionContainer as TtsSectionContainer0 } from './elements/properties/ttsSectionContainer';
import { Type as Type0 } from './elements/properties/type';
import { UncheckedControl as UncheckedControl0 } from './elements/properties/unchecked_control';
import { UncheckedHoverControl as UncheckedHoverControl0 } from './elements/properties/unchecked_hover_control';
import { UncheckedLockedControl as UncheckedLockedControl0 } from './elements/properties/unchecked_locked_control';
import { UncheckedLockedHoverControl as UncheckedLockedHoverControl0 } from './elements/properties/unchecked_locked_hover_control';
import { UseAnchoredOffset as UseAnchoredOffset0 } from './elements/properties/use_anchored_offset';
import { UseChildAnchors as UseChildAnchors0 } from './elements/properties/use_child_anchors';
import { UseLastFocus as UseLastFocus0 } from './elements/properties/use_last_focus';
import { Variables as Variables0 } from './elements/properties/variables';
import { VirtualKeyboardBufferControl as VirtualKeyboardBufferControl0 } from './elements/properties/virtual_keyboard_buffer_control';
import { Visible as Visible0 } from './elements/properties/visible';
import { ZipFolder as ZipFolder0 } from './elements/properties/zip_folder';
import { ControlIds as ControlIds0 } from './elements/properties/control_ids';
export declare namespace Def {
	type Animation = {
		anim_type: AnimType0;
		animation_reset_name?: AnimationResetName0;
		destroy_at_end?: DestroyAtEnd0;
		disable_anim_fast_forward?: DisableAnimFastForward0;
		duration?: Duration0;
		easing?: Easing0;
		end_event?: EndEvent0;
		fps?: Fps0;
		frame_count?: FrameCount0;
		frame_step?: FrameStep0;
		from?: From0;
		initial_uv?: InitialUv0;
		next?: Next0;
		play_event?: PlayEvent0;
		propagate_alpha?: PropagateAlpha0;
		reversible?: Reversible0;
		scale_from_starting_alpha?: ScaleFromStartingAlpha0;
		to?: To0;
		uv?: Uv0;
		uv_size?: UvSize0;
	};
	type Control = {
		controls?:
			| Array<{
					[prop: string]: Def.GroupedUi;
			  }>
			| ItemRef0;
		modifications?: Array<{
			control_name?: string;
			array_name?: 'bindings' | 'controls';
			operation?:
				| 'insert_back'
				| 'insert_front'
				| 'insert_after'
				| 'insert_before'
				| 'move_back'
				| 'move_front'
				| 'move_after'
				| 'move_before'
				| 'swap'
				| 'remove'
				| 'replace';
			where?: Bindings0;
			target?: Bindings0;
			target_control?: string;
			value?:
				| Bindings0
				| (
						| Array<{
								[prop: string]: Def.GroupedUi;
						  }>
						| ItemRef0
				  );
		}>;
		allow_clipping?: AllowClipping0;
		allow_debug_missing_texture?: AllowDebugMissingTexture0;
		allow_scroll_even_when_content_fits?: AllowScrollEvenWhenContentFits0;
		alpha?: Alpha0;
		always_handle_pointer?: AlwaysHandlePointer0;
		always_handle_scrolling?: AlwaysHandleScrolling0;
		always_listen_to_input?: AlwaysListenToInput0;
		always_rotate?: AlwaysRotate0;
		anchor_from?: AnchorFrom0;
		anchor_to?: AnchorTo0;
		anims?: Anims0;
		background_control?: BackgroundControl0;
		background_hover_control?: BackgroundHoverControl0;
		backup_font_type?: BackupFontType0;
		bilinear?: Bilinear0;
		bindings?: Bindings0;
		button_mappings?: ButtonMappings0;
		cache_screen?: CacheScreen0;
		checked_control?: CheckedControl0;
		checked_hover_control?: CheckedHoverControl0;
		checked_locked_control?: CheckedLockedControl0;
		checked_locked_hover_control?: CheckedLockedHoverControl0;
		clip_direction?: ClipDirection0;
		clip_pixelperfect?: ClipPixelperfect0;
		clips_children?: ClipsChildren0;
		close_on_player_hurt?: CloseOnPlayerHurt0;
		collection_index?: CollectionIndex0;
		collection_name?: CollectionName0;
		color?: Color0;
		consume_hover_events?: ConsumeHoverEvents0;
		contained?: Contained0;
		control_name?: ControlName0;
		default_control?: DefaultControl0;
		default_focus_precedence?: DefaultFocusPrecedence0;
		disable_anim_fast_forward?: DisableAnimFastForward0;
		draggable?: Draggable0;
		dropdown_area?: DropdownArea0;
		dropdown_content_control?: DropdownContentControl0;
		dropdown_name?: DropdownName0;
		enable_directional_toggling?: EnableDirectionalToggling0;
		enable_profanity_filter?: EnableProfanityFilter0;
		enabled_newline?: EnabledNewline0;
		enabled?: Enabled0;
		factory?: Factory0;
		fill?: Fill0;
		focus_change_down?: FocusChangeDown0;
		focus_change_left?: FocusChangeLeft0;
		focus_change_right?: FocusChangeRight0;
		focus_change_up?: FocusChangeUp0;
		focus_container?: FocusContainer0;
		focus_enabled?: FocusEnabled0;
		focus_identifier?: FocusIdentifier0;
		focus_magnet_enabled?: FocusMagnetEnabled0;
		focus_navigation_mode_down?: FocusNavigationModeDown0;
		focus_navigation_mode_left?: FocusNavigationModeLeft0;
		focus_navigation_mode_right?: FocusNavigationModeRight0;
		focus_navigation_mode_up?: FocusNavigationModeUp0;
		focus_wrap_enabled?: FocusWrapEnabled0;
		font_scale_factor?: FontScaleFactor0;
		font_size?: FontSize0;
		font_type?: FontType0;
		force_render_below?: ForceRenderBelow0;
		force_texture_reload?: ForceTextureReload0;
		grid_dimension_binding?: GridDimensionBinding0;
		grid_dimensions?: GridDimensions0;
		grid_item_template?: GridItemTemplate0;
		grid_position?: GridPosition0;
		grid_rescaling_type?: GridRescalingType0;
		handle_deselect?: HandleDeselect0;
		handle_select?: HandleSelect0;
		hide_hyphen?: HideHyphen0;
		hover_alpha?: Alpha0;
		hover_color?: Color0;
		hover_control?: HoverControl0;
		hover_enabled?: HoverEnabled0;
		ignored?: Ignored0;
		images?: Images0;
		indent_control?: IndentControl0;
		inherit_max_sibling_height?: InheritMaxSiblingHeight0;
		inherit_max_sibling_width?: InheritMaxSiblingWidth0;
		is_modal?: IsModal0;
		is_showing_menu?: IsShowingMenu0;
		jump_to_bottom_on_update?: JumpToBottomOnUpdate0;
		keep_ratio?: KeepRatio0;
		layer?: Layer0;
		localize?: Localize0;
		locked_alpha?: Alpha0;
		locked_color?: Color0;
		locked_control?: LockedControl0;
		low_frequency_rendering?: LowFrequencyRendering0;
		max_length?: MaxLength0;
		max_size?: MaxSize0;
		maximum_grid_items?: MaximumGridItems0;
		min_size?: MinSize0;
		modal?: Modal0;
		offset?: Offset0;
		orientation?: Orientation0;
		place_holder_control?: PlaceHolderControl0;
		pressed_alpha?: Alpha0;
		pressed_color?: Color0;
		pressed_control?: PressedControl0;
		prevent_touch_input?: PreventTouchInput0;
		primary_color?: Color0;
		progress_control?: ProgressControl0;
		progress_hover_control?: ProgressHoverControl0;
		propagate_alpha?: PropagateAlpha0;
		property_bag?: PropertyBag0;
		radio_toggle_group?: RadioToggleGroup0;
		render_game_behind?: RenderGameBehind0;
		render_only_when_topmost?: RenderOnlyWhenTopmost0;
		renderer?: Renderer0;
		reset_event?: ResetEvent0;
		reset_on_focus_lost?: ResetOnFocusLost0;
		rotate_speed?: RotateSpeed0;
		screen_draws_last?: ScreenDrawsLast0;
		screen_not_flushable?: ScreenNotFlushable0;
		scroll_box_and_track_panel?: ScrollBoxAndTrackPanel0;
		scroll_content?: ScrollContent0;
		scroll_speed?: ScrollSpeed0;
		scroll_view_port?: ScrollViewPort0;
		scrollbar_box?: ScrollbarBox0;
		scrollbar_touch_button?: ScrollbarTouchButton0;
		scrollbar_track_button?: ScrollbarTrackButton0;
		scrollbar_track?: ScrollbarTrack0;
		send_telemetry?: SendTelemetry0;
		shadow?: Shadow0;
		should_steal_mouse?: ShouldStealMouse0;
		size?: Size0;
		slider_box_control?: SliderBoxControl0;
		slider_collection_name?: SliderCollectionName0;
		slider_deselected_button?: SliderDeselectedButton0;
		slider_direction?: SliderDirection0;
		slider_name?: SliderName0;
		slider_select_on_hover?: SliderSelectOnHover0;
		slider_selected_button?: SliderSelectedButton0;
		slider_small_decrease_button?: SliderSmallDecreaseButton0;
		slider_small_increase_button?: SliderSmallIncreaseButton0;
		slider_steps?: SliderSteps0;
		slider_track_button?: SliderTrackButton0;
		sound_name?: SoundName0;
		sound_pitch?: SoundPitch0;
		sound_volume?: SoundVolume0;
		text_alignment?: TextAlignment0;
		text_box_name?: TextBoxName0;
		text_control?: TextControl0;
		text_edit_box_grid_collection_name?: TextEditBoxGridCollectionName0;
		text_labels?: TextLabels0;
		text_type?: TextType0;
		text?: Text0;
		texture_file_system?: TextureFileSystem0;
		texture?: Texture0;
		tiled?: Tiled0;
		toggle_default_state?: ToggleDefaultState0;
		toggle_grid_collection_name?: ToggleGridCollectionName0;
		toggle_group_default_selected?: ToggleGroupDefaultSelected0;
		toggle_group_forced_index?: ToggleGroupForcedIndex0;
		toggle_name?: ToggleName0;
		toggle_off_button?: ToggleOffButton0;
		toggle_on_button?: ToggleOnButton0;
		touch_mode?: TouchMode0;
		tts_control_header?: ControlHeader0;
		tts_control_type_order_priority?: ControlTypeOrderPriority0;
		tts_ignore_count?: IgnoreCount0;
		tts_ignore_subsections?: IgnoreSubsections0;
		tts_index_priority?: IndexPriority0;
		tts_inherit_siblings?: InheritSiblings0;
		tts_name?: Name0;
		tts_override_control_value?: OverrideControlValue0;
		tts_section_header?: SectionHeader0;
		tts_toggle_off?: ToggleOff0;
		tts_toggle_on?: ToggleOn0;
		tts_value_changed?: ValueChanged0;
		tts_value_order_priority?: ValueOrderPriority0;
		ttsSectionContainer?: TtsSectionContainer0;
		type?: Type0;
		unchecked_control?: UncheckedControl0;
		unchecked_hover_control?: UncheckedHoverControl0;
		unchecked_locked_control?: UncheckedLockedControl0;
		unchecked_locked_hover_control?: UncheckedLockedHoverControl0;
		use_anchored_offset?: UseAnchoredOffset0;
		use_child_anchors?: UseChildAnchors0;
		use_last_focus?: UseLastFocus0;
		uv_size?: UvSize0;
		uv?: Uv0;
		variables?: Variables0;
		virtual_keyboard_buffer_control?: VirtualKeyboardBufferControl0;
		visible?: Visible0;
		zip_folder?: ZipFolder0;
	};
	type ControlFactory = {
		type?: 'factory';
		control_ids?: ControlIds0;
		control_name?: ControlName0;
	};
	type GroupedUi = {} & (Def.Control | Def.Animation | Def.ControlFactory);
}
export type Ui = {
	namespace?: string;
};
